import React, { useState } from 'react';
import InfoCard from '../InfoCard';
import CodeBlock, { Keyword, StringLiteral, Comment, NumberLiteral, Func } from '../CodeBlock';
import { TopicComponentProps } from '../../types';

interface DoublyNode {
    value: number;
    id: number;
}

const DoublyLinkedListVisualizer: React.FC = () => {
    const [nodes, setNodes] = useState<DoublyNode[]>([
        { value: 10, id: 1 },
        { value: 20, id: 2 },
        { value: 30, id: 3 },
    ]);
    const [addValue, setAddValue] = useState('');
    const [removeValue, setRemoveValue] = useState('');

    const addNodeToEnd = () => {
        const value = parseInt(addValue, 10);
        if (!isNaN(value)) {
            setNodes([...nodes, { value, id: Date.now() }]);
            setAddValue('');
        }
    };
    
    const removeNodeByValue = () => {
        const value = parseInt(removeValue, 10);
        if (!isNaN(value)) {
            const nodeIndex = nodes.findIndex(n => n.value === value);
            if(nodeIndex !== -1) {
                setNodes(nodes.filter((_, index) => index !== nodeIndex));
            } else {
                alert('ุงูุนูุฏุฉ ุบูุฑ ููุฌูุฏุฉ!');
            }
            setRemoveValue('');
        }
    };

    return (
        <div className="bg-gradient-to-br from-slate-50 to-slate-100 rounded-2xl p-6 my-8 border-l-4 border-amber-500 shadow-md">
            <h3 className="text-xl font-bold text-amber-700 mb-2 flex items-center gap-2"><span className="text-2xl">โ๏ธ</span> ูุญุงูู ุงููุงุฆูุฉ ุงููุฒุฏูุฌุฉ</h3>
            <p className="text-slate-600 mb-4">ุฃุถู ุฃู ุงุญุฐู ุนูุฏูุง ูุชุชุฎูู ููู ุชุนูู ุงููุงุฆูุฉ ุงููุฒุฏูุฌุฉ ูููู ูุชู ุชุญุฏูุซ ูุคุดุฑุงุช `next` ู `prev`.</p>
            
            <div className="flex flex-wrap items-center justify-center p-4 min-h-[80px]">
                <div className="text-red-500 font-bold px-3 py-1 rounded-lg mr-2 text-lg">NULL</div>
                <div className="text-2xl font-bold text-slate-400 mx-1">โ</div>
                
                {nodes.map((node, index) => (
                    <React.Fragment key={node.id}>
                        <div className="flex items-center bg-white rounded-lg shadow-lg animate-fade-in-up">
                            <div className="bg-slate-300 w-8 h-12 flex items-center justify-center rounded-l-lg">
                                <div className="w-2 h-2 bg-slate-600 rounded-full"></div>
                            </div>
                            <div className="bg-amber-500 text-white font-mono font-bold w-12 h-12 flex items-center justify-center text-lg">{node.value}</div>
                            <div className="bg-slate-300 w-8 h-12 flex items-center justify-center rounded-r-lg">
                                <div className="w-2 h-2 bg-slate-600 rounded-full"></div>
                            </div>
                        </div>
                        {index < nodes.length - 1 && <div className="text-2xl font-bold text-slate-400 mx-1">โ</div>}
                    </React.Fragment>
                ))}
                 <div className="text-2xl font-bold text-slate-400 mx-1">โ</div>
                 <div className="text-red-500 font-bold px-3 py-1 rounded-lg ml-2 text-lg">NULL</div>
            </div>

            <div className="mt-6 flex justify-center items-center gap-4 flex-wrap border-t pt-6">
                 <div>
                    <input type="number" value={addValue} onChange={(e) => setAddValue(e.target.value)} placeholder="ูููุฉ ููุฅุถุงูุฉ ููููุงูุฉ" className="p-2 border-2 border-slate-300 rounded-lg focus:ring-2 focus:ring-green-400 transition" />
                    <button onClick={addNodeToEnd} className="bg-green-500 text-white font-bold py-2 px-5 rounded-lg hover:bg-green-600 transition mr-2">ุฅุถุงูุฉ</button>
                </div>
                 <div>
                    <input type="number" value={removeValue} onChange={(e) => setRemoveValue(e.target.value)} placeholder="ูููุฉ ููุญุฐู" className="p-2 border-2 border-slate-300 rounded-lg focus:ring-2 focus:ring-red-400 transition" />
                    <button onClick={removeNodeByValue} className="bg-red-500 text-white font-bold py-2 px-5 rounded-lg hover:bg-red-600 transition mr-2">ุญุฐู</button>
                </div>
            </div>
        </div>
    );
};


const DoublyLinkedListTopic: React.FC<TopicComponentProps> = ({ onStartQuiz }) => {
    return (
        <div className="space-y-12 animate-fade-in-up">
            <header className="bg-white/90 backdrop-blur-sm rounded-2xl p-8 text-center shadow-lg">
                <h2 className="text-4xl font-extrabold mb-3 bg-gradient-to-r from-amber-500 to-orange-500 text-transparent bg-clip-text">ุงูููุงุฆู ุงููุฑุชุจุทุฉ ุงููุฒุฏูุฌุฉ</h2>
                <p className="text-lg text-slate-600 max-w-3xl mx-auto mb-6">
                    ุชุทูุฑ ูููุงุฆูุฉ ุงูุจุณูุทุฉุ ุญูุซ ุชุญุชูู ูู ุนูุฏุฉ ุนูู ูุคุดุฑูู: ูุงุญุฏ ููุนูุฏุฉ ุงูุชุงููุฉ ูุขุฎุฑ ููุนูุฏุฉ ุงูุณุงุจูุฉุ ููุง ูุชูุญ ุงูุชููู ูู ููุง ุงูุงุชุฌุงููู.
                </p>
                <div className="flex justify-center gap-4 flex-wrap">
                     <button onClick={onStartQuiz} className="bg-gradient-to-r from-green-500 to-teal-500 text-white font-bold py-3 px-6 rounded-full hover:scale-105 transform transition shadow-md">
                        <span className="mr-2">๐งช</span> ุงุฎุชุจุงุฑ ุดุงูู
                    </button>
                </div>
            </header>

            <section>
                <h3 className="text-3xl font-bold text-slate-800 mb-6 text-center">ููุงุฐุง ูุณุชุฎุฏู ุงููุงุฆูุฉ ุงููุฒุฏูุฌุฉุ</h3>
                <div className="grid md:grid-cols-2 gap-6">
                    <InfoCard icon="โ๏ธ" title="ุชููู ุซูุงุฆู ุงูุงุชุฌุงู" iconBgClass="bg-sky-500">
                        <p>ุงูููุฒุฉ ุงูุฃูุจุฑ ูู ุงููุฏุฑุฉ ุนูู ุงุฌุชูุงุฒ ุงููุงุฆูุฉ ููุฃูุงู (ุจุงุณุชุฎุฏุงู `next`) ูููุฎูู (ุจุงุณุชุฎุฏุงู `prev`). ูุฐุง ูููุฏ ุฌุฏูุง ูู ุชุทุจููุงุช ูุซู ูุญุฑุฑุงุช ุงููุตูุต (ููุชููู ุจูู ุงูุฃุญุฑู) ุฃู ุชุงุฑูุฎ ุงููุชุตูุญ.</p>
                    </InfoCard>
                    <InfoCard icon="๐๏ธ" title="ุญุฐู ุฃุณูู" iconBgClass="bg-rose-500">
                        <p>ุนูููุฉ ุงูุญุฐู ุชููู ุฃุจุณุท ุฅูู ุญุฏ ูุง. ุฅุฐุง ูุงู ูุฏููุง ูุคุดุฑ ููุนูุฏุฉ ุงูุชู ูุฑูุฏ ุญุฐููุงุ ูููููุง ุงููุตูู ูุจุงุดุฑุฉ ุฅูู ุงูุนูุฏุฉ ุงูุณุงุจูุฉ ููุง ุนุจุฑ ูุคุดุฑ `prev` ุฏูู ุงูุญุงุฌุฉ ุฅูู ุงูุจุญุซ ุนููุง ูู ุงูุจุฏุงูุฉ.</p>
                    </InfoCard>
                </div>
            </section>
            
            <section>
                <h3 className="text-3xl font-bold text-slate-800 mb-6 text-center">ุงูุจููุฉ ุงูุฃุณุงุณูุฉ ููุนูุฏุฉ ุงููุฒุฏูุฌุฉ</h3>
                <div className="grid md:grid-cols-2 gap-6 items-center">
                    <InfoCard icon="๐งฑ" title="ููููุงุช ุงูุนูุฏุฉ ุงููุฒุฏูุฌุฉ" iconBgClass="bg-indigo-500">
                       <p>ูู ุนูุฏุฉ ูู ุงููุงุฆูุฉ ุงููุฒุฏูุฌุฉ ุชุญุชูู ุนูู ุซูุงุซุฉ ุฃุฌุฒุงุก ุฑุฆูุณูุฉ:</p>
                       <p><strong>1. ุงููุคุดุฑ ุงูุณุงุจู (Prev Pointer):</strong> ุนููุงู ูู ุงูุฐุงูุฑุฉ ูุดูุฑ ุฅูู ุงูุนูุฏุฉ ุงูุณุงุจูุฉ. ูู ุงูุนูุฏุฉ ุงูุฃููู (Head)ุ ูููู `NULL`.</p>
                       <p><strong>2. ุงูุจูุงูุงุช (Data):</strong> ุงููููุฉ ุงููุนููุฉ ุงููุฎุฒูุฉ.</p>
                       <p><strong>3. ุงููุคุดุฑ ุงูุชุงูู (Next Pointer):</strong> ุนููุงู ูู ุงูุฐุงูุฑุฉ ูุดูุฑ ุฅูู ุงูุนูุฏุฉ ุงูุชุงููุฉ. ูู ุงูุนูุฏุฉ ุงูุฃุฎูุฑุฉุ ูููู `NULL`.</p>
                    </InfoCard>
                     <div className="bg-white/50 p-4 rounded-lg shadow-md text-center">
                        <img src="https://i.imgur.com/3j7g5g8.png" alt="Doubly Linked List Structure" className="mx-auto rounded-lg" />
                        <p className="mt-2 text-sm text-slate-600">ุฑุณู ุชูุถูุญู ููุถุญ ุจููุฉ ุงูุนูุฏุฉ ุงููุฒุฏูุฌุฉ.</p>
                    </div>
                </div>
            </section>

            <DoublyLinkedListVisualizer />
            
            <section>
                <h3 className="text-3xl font-bold text-slate-800 mb-6 text-center">ุงูุชูููุฐ ุจุงุณุชุฎุฏุงู C++</h3>
                <CodeBlock title="ุชุนุฑูู ูุฆุฉ Node ู DoublyLinkedList">
                    <Comment>// ูุฆุฉ ูุชูุซูู ุงูุนูุฏุฉ ุงููุฒุฏูุฌุฉ</Comment>{'\n'}
                    <Keyword>class</Keyword> Node {'{'}{'\n'}
                    <Keyword>public</Keyword>:{'\n'}
                    {'    '}<Keyword>int</Keyword> data;      <Comment>// ุงูุจูุงูุงุช</Comment>{'\n'}
                    {'    '}Node* next;    <Comment>// ูุคุดุฑ ููุชุงูู</Comment>{'\n'}
                    {'    '}Node* prev;    <Comment>// ูุคุดุฑ ููุณุงุจู</Comment>{'\n'}
                    {'}'};{'\n\n'}
                    
                    <Keyword>class</Keyword> DoublyLinkedList {'{'}{'\n'}
                    <Keyword>private</Keyword>:{'\n'}
                    {'    '}Node* head;  <Comment>// ูุคุดุฑ ููุจุฏุงูุฉ</Comment>{'\n'}
                    <Keyword>public</Keyword>:{'\n'}
                    {'    '}<Func>DoublyLinkedList</Func>() : head(<Keyword>nullptr</Keyword>) {'{}'} {'\n'}
                    {'    '}<Keyword>void</Keyword> <Func>insertAtBeginning</Func>(<Keyword>int</Keyword> value);{'\n'}
                    {'    '}<Keyword>void</Keyword> <Func>deleteNode</Func>(<Keyword>int</Keyword> value);{'\n'}
                    {'}'};
                </CodeBlock>

                <h4 className="font-bold text-xl mb-2 text-slate-700 mt-8">1. ุงูุฅุถุงูุฉ ูู ุจุฏุงูุฉ ุงููุงุฆูุฉ</h4>
                <p className="text-slate-600 mb-4">ุนูุฏ ุงูุฅุถุงูุฉ ูู ุงูุจุฏุงูุฉุ ูุฌุจ ุชุญุฏูุซ ูุคุดุฑ `prev` ููุฑุฃุณ ุงููุฏูู (ุฅุฐุง ูุงู ููุฌูุฏูุง) ููุดูุฑ ุฅูู ุงูุนูุฏุฉ ุงูุฌุฏูุฏุฉ.</p>
                <CodeBlock title="ุฏุงูุฉ insertAtBeginning">
                    <Keyword>void</Keyword> DoublyLinkedList::<Func>insertAtBeginning</Func>(<Keyword>int</Keyword> value) {'{'}{'\n'}
                    {'    '}Node* newNode = <Keyword>new</Keyword> Node(); <Comment>// 1. ุฅูุดุงุก ุนูุฏุฉ ุฌุฏูุฏุฉ</Comment>{'\n'}
                    {'    '}newNode-&gt;data = value;{'\n'}
                    {'    '}newNode-&gt;next = head; <Comment>// 2. ุฑุจุทูุง ุจุงูุฑุฃุณ ุงููุฏูู</Comment>{'\n'}
                    {'    '}newNode-&gt;prev = <Keyword>nullptr</Keyword>; <Comment>// ูู ุงูุขู ุงูุนูุฏุฉ ุงูุฃููู</Comment>{'\n\n'}
                    {'    '}<Keyword>if</Keyword> (head != <Keyword>nullptr</Keyword>) {'{'} <Comment>// 3. ุฅุฐุง ูู ุชูู ุงููุงุฆูุฉ ูุงุฑุบุฉ</Comment>{'\n'}
                    {'        '}head-&gt;prev = newNode; <Comment>//   ุงุฌุนู ุงูุฑุฃุณ ุงููุฏูู ูุดูุฑ ููุฎูู ููุนูุฏุฉ ุงูุฌุฏูุฏุฉ</Comment>{'\n'}
                    {'    '}{'}'}{'\n\n'}
                    {'    '}head = newNode; <Comment>// 4. ุชุญุฏูุซ ุงูุฑุฃุณ</Comment>{'\n'}
                    {'}'}
                </CodeBlock>

                <h4 className="font-bold text-xl mb-2 text-slate-700 mt-8">2. ุญุฐู ุนูุฏุฉ</h4>
                <p className="text-slate-600 mb-4">ุนูุฏ ุงูุญุฐูุ ูุฌุจ ุฑุจุท ุงูุนูุฏุฉ ุงูุณุงุจูุฉ ุจุงูุนูุฏุฉ ุงูุชุงููุฉ ูุจุงุดุฑุฉุ ูุน ุงูุงูุชุจุงู ููุญุงูุงุช ุงูุฎุงุตุฉ ูุซู ุญุฐู ุงูุฑุฃุณ.</p>
                <CodeBlock title="ุฏุงูุฉ deleteNode">
                    <Comment>// ... (ููุฏ ุงูุจุญุซ ุนู ุงูุนูุฏุฉ ุงููุฑุงุฏ ุญุฐููุง: `current`)</Comment>{'\n'}
                    <Keyword>if</Keyword> (current == <Keyword>nullptr</Keyword>) <Keyword>return</Keyword>; <Comment>// ูู ูุชู ุงูุนุซูุฑ ุนูููุง</Comment>{'\n\n'}
                    <Keyword>if</Keyword> (current == head) {'{'} <Comment>// ุงูุญุงูุฉ 1: ุญุฐู ุงูุฑุฃุณ</Comment>{'\n'}
                    {'    '}head = current-&gt;next;{'\n'}
                    {'}'}{'\n\n'}
                    <Keyword>if</Keyword> (current-&gt;next != <Keyword>nullptr</Keyword>) {'{'} <Comment>// ุงูุญุงูุฉ 2: ุชุญุฏูุซ ูุคุดุฑ `prev` ููุนูุฏุฉ ุงูุชุงููุฉ</Comment>{'\n'}
                    {'    '}current-&gt;next-&gt;prev = current-&gt;prev;{'\n'}
                    {'}'}{'\n\n'}
                    <Keyword>if</Keyword> (current-&gt;prev != <Keyword>nullptr</Keyword>) {'{'} <Comment>// ุงูุญุงูุฉ 3: ุชุญุฏูุซ ูุคุดุฑ `next` ููุนูุฏุฉ ุงูุณุงุจูุฉ</Comment>{'\n'}
                    {'    '}current-&gt;prev-&gt;next = current-&gt;next;{'\n'}
                    {'}'}{'\n\n'}
                    <Keyword>delete</Keyword> current; <Comment>// ุชุญุฑูุฑ ุงูุฐุงูุฑุฉ</Comment>{'\n'}
                </CodeBlock>
            </section>
        </div>
    );
};

export default DoublyLinkedListTopic;
